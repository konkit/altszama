version: '2.1'
orbs:
  browser-tools: circleci/browser-tools@1.2.3
jobs:
  test:
    environment:
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"

    docker:
    - image: cimg/openjdk:11.0-node
    - image: circleci/mongo:4.2.3

    steps:
    - checkout

    - restore_cache:
        key: v1-gradle-wrapper-{{ checksum "backend-app/gradle/wrapper/gradle-wrapper.properties" }}

    - restore_cache:
        key: v1-gradle-cache-{{ checksum "backend-app/build.gradle" }}

    - setup_remote_docker

    - run: |
        echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin

    - run:
        name: Build docker images
        command: |
          CURRENT_BRANCH=$CIRCLE_BRANCH ./buildDockerImages.sh

    - save_cache:
        paths:
        - ~/.gradle/wrapper
        key: v1-gradle-wrapper-{{ checksum "backend-app/gradle/wrapper/gradle-wrapper.properties" }}

    - save_cache:
        paths:
        - ~/.gradle/caches
        key: v1-gradle-cache-{{ checksum "backend-app/build.gradle" }}

  testE2E:
    docker:
      - image: cimg/openjdk:11.0-node
    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Create .envtest file
          command: |
            touch .envtest
            echo "DATABASE_HOST=$DATABASE_HOST" >> .envtest
            echo "DATABASE_NAME=$DATABASE_NAME" >> .envtest
            echo "DATABASE_PORT=$DATABASE_PORT" >> .envtest
            echo "GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID" >> .envtest
            echo "GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET" >> .envtest
            echo "JWT_SIGNING_KEY=$JWT_SIGNING_KEY" >> .envtest
            echo "ORIGIN_URL=$ORIGIN_URL" >> .envtest
            echo "SERVER_PORT=$SERVER_PORT" >> .envtest
            echo "VAPID_PUBLIC_KEY=$VAPID_PUBLIC_KEY" >> .envtest
            echo "VAPID_PRIVATE_KEY=$VAPID_PRIVATE_KEY" >> .envtest
            echo "VAPID_SUBJECT=$VAPID_SUBJECT" >> .envtest
            echo "SENTRY_URL=$SENTRY_URL" >> .envtest
            echo "spring_profiles_active=$spring_profiles_active" >> .envtest

      - run:
          name: Run e2e tests
          command: |
            CURRENT_BRANCH=$CIRCLE_BRANCH ./runE2E.sh

  deploy:
    machine:
      enabled: true
    steps:
    - add_ssh_keys

    - run:
        name: known_hosts sadness
        command: ssh-keyscan -H $SITE_SSH_HOST >> ~/.ssh/known_hosts

    - run:
        name: Do the upgrade
        command: |
          ssh $SITE_SSH_USER@$SITE_SSH_HOST "cd /var/app/altszama && sh update.sh"

workflows:
  version: 2
  build-and-deploy:
    jobs:
    - test:
        filters:
          branches:
            only: master
#     - testE2E:
#         requires:
#         - test
    - deploy:
        requires:
        - test
#         - testE2E
        filters:
          branches:
            only: master
