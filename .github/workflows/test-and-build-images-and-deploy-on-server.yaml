name: Test and Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  test-backend:
    name: Run Backend tests
    environment: production
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mongodb-version: [ '4.2', '4.4', '5.0', '6.0' ]
    steps:
      - uses: actions/checkout@v2

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./backend-app/gradlew

      - name: Run tests
        run: ./gradlew test
        working-directory: ./backend-app
  build:
    name: Build Docker images
    needs: test-backend
    environment: production
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.newTagStep.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v2

      - name: Bump version and push tag
        id: newTagStep
        uses: anothrNick/github-tag-action@1.61.0 # Don't use @master unless you're happy to test the latest version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false
          DEFAULT_BUMP: patch

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./backend-app/gradlew

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Images
        run: CURRENT_BRANCH=${GITHUB_HEAD_REF-${GITHUB_REF##*/}} TAG=${{ steps.newTagStep.outputs.new_tag }} ./buildDockerImages.sh
  deploy:
    name: Deploy on prod
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SITE_SSH_KEY" > ~/.ssh/prod.key
          chmod 600 ~/.ssh/prod.key
          cat >>~/.ssh/config <<END
          Host prod
            HostName $SITE_SSH_HOST
            User $SITE_SSH_USER
            IdentityFile ~/.ssh/prod.key
            StrictHostKeyChecking no
          END
        env:
          SITE_SSH_USER: ${{ secrets.SITE_SSH_USER }}
          SITE_SSH_HOST: ${{ secrets.SITE_SSH_HOST }}
          SITE_SSH_KEY: ${{ secrets.SITE_SSH_KEY }}

      - name: Update the docker-compose file
        run: scp docker-compose.yml prod:/var/app/altszama/altszama/

      - name: Run updated version on the server
        run: ssh prod "cd /var/app/altszama && sh update.sh ${{ needs.build.outputs.new_tag }}"

