import org.jetbrains.kotlin.gradle.tasks.KotlinCompile


plugins {
  id 'org.springframework.boot' version '2.7.11'
  id 'io.spring.dependency-management' version '1.0.15.RELEASE'
  id 'org.jetbrains.kotlin.jvm' version '1.6.21'
  id 'org.jetbrains.kotlin.plugin.spring' version "1.6.21"

  id 'com.google.cloud.tools.jib' version '2.1.0'
  id("org.owasp.dependencycheck") version "8.2.1"
}

repositories {
  mavenCentral()
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'kotlin-kapt'

def kotlin_version = "1.6.21"
def arrow_version = "0.11.0"

group = 'altszama'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


dependencies {
  // Spring Boot
  implementation 'org.springframework.boot:spring-boot-starter'
  implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
  implementation('org.springframework.boot:spring-boot-starter-security')
  implementation('org.springframework.boot:spring-boot-starter-web')
  implementation("org.springframework.boot:spring-boot-devtools")
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'

  // Security
  implementation("org.springframework.security:spring-security-config")
  implementation("org.springframework.security:spring-security-data")
  implementation("org.springframework.security:spring-security-web")

  // Web push notifications
  implementation("nl.martijndwars:web-push:5.1.1")
  implementation('org.bouncycastle:bcprov-jdk15on:1.69')

  // Jackson
  implementation("com.fasterxml.jackson.module:jackson-module-parameter-names")
  implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
  implementation("com.fasterxml.jackson.datatype:jackson-datatype-jdk8")
  implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")

  // Google OAuth2
  implementation("com.google.apis:google-api-services-oauth2:v2-rev65-1.17.0-rc")
  implementation("com.google.api-client:google-api-client:2.0.0")

  // JJWT
  implementation("io.jsonwebtoken:jjwt:0.9.0")

  // Kotlin
  implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
  implementation("org.jetbrains.kotlin:kotlin-reflect")
  implementation('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2')
  implementation 'org.jetbrains.kotlin:kotlin-reflect'


  // Arrow
  implementation "io.arrow-kt:arrow-core:$arrow_version"
  implementation "io.arrow-kt:arrow-syntax:$arrow_version"
  implementation "io.arrow-kt:arrow-fx:$arrow_version"

  // Metrics
  implementation 'io.micrometer:micrometer-registry-prometheus:1.8.0'

  implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
  implementation 'org.springdoc:springdoc-openapi-kotlin:1.4.2'

  testImplementation('org.springframework.boot:spring-boot-starter-test')
  testImplementation('org.springframework.security:spring-security-test')
  testImplementation("org.assertj:assertj-core")

  testImplementation('org.junit.jupiter:junit-jupiter-api:5.1.0')
  testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

  testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.1.0')
}

tasks.withType(KotlinCompile) {
  kotlinOptions {
    freeCompilerArgs = ['-Xjsr305=strict']
    jvmTarget = '11'
  }
}

tasks.named('test') {
  useJUnitPlatform()
}

bootBuildImage {
  imageName="altszama-backend"
}

jar {
  manifest {
    attributes "Main-Class": "altszama.ApplicationKt"
  }

  from {
    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
  }
}
