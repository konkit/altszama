buildscript {
  ext {
    kotlinVersion = '1.5.31'
    springBootVersion = '2.3.1.RELEASE'
  }

  repositories {
    mavenCentral()
    maven { url = uri("https://repo.spring.io/plugins-release") }
    maven { url = uri("https://plugins.gradle.org/m2/") }
  }

  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
    classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
  }
}

plugins {
  id 'com.google.cloud.tools.jib' version '2.1.0'
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'kotlin-kapt'


def arrow_version = "0.11.0"

group = 'altszama'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 11

compileKotlin {
  kotlinOptions {
    freeCompilerArgs = ["-Xjsr305=strict"]
    jvmTarget = sourceCompatibility
  }
}
compileTestKotlin {
  kotlinOptions {
    freeCompilerArgs = ["-Xjsr305=strict"]
    jvmTarget = sourceCompatibility
  }
}

jar {
  manifest {
    attributes "Main-Class": "altszama.ApplicationKt"
  }

  from {
    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

repositories {
  mavenCentral()
  jcenter()
  maven { url = uri("http://repo.spring.io/plugins-release") }
  maven { url = uri("https://plugins.gradle.org/m2/") }
  maven { url "https://dl.bintray.com/arrow-kt/arrow-kt/" }
}


dependencies {
  // Spring Boot
  compile('org.springframework.boot:spring-boot-starter-data-mongodb')
  compile('org.springframework.boot:spring-boot-starter-security')
  compile('org.springframework.boot:spring-boot-starter-web')
  compile("org.springframework.boot:spring-boot-devtools")
  implementation 'org.springframework.boot:spring-boot-starter-validation'

  // Security
  compile("org.springframework.security:spring-security-config")
  compile("org.springframework.security:spring-security-data")
  compile("org.springframework.security:spring-security-web")

  // Web push notifications
  compile("nl.martijndwars:web-push:5.0.2")
  compile("org.bouncycastle:bcprov-jdk15on:1.54")

  // Jackson
  compile("com.fasterxml.jackson.module:jackson-module-parameter-names")
  compile("com.fasterxml.jackson.module:jackson-module-kotlin")
  compile("com.fasterxml.jackson.datatype:jackson-datatype-jdk8")
  compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")

  // Google OAuth2
  compile("com.google.apis:google-api-services-oauth2:v2-rev65-1.17.0-rc")
  compile("com.google.api-client:google-api-client:2.0.0")

  // JJWT
  compile("io.jsonwebtoken:jjwt:0.9.0")

  // Kotlin
  compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
  compile("org.jetbrains.kotlin:kotlin-reflect")
  implementation('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2')

  // Arrow
  implementation "io.arrow-kt:arrow-core:$arrow_version"
  implementation "io.arrow-kt:arrow-syntax:$arrow_version"
  implementation "io.arrow-kt:arrow-fx:$arrow_version"
//    kapt    "io.arrow-kt:arrow-meta:$arrow_version"

  // Metrics
  implementation 'org.springframework.boot:spring-boot-starter-actuator:2.6.1'
  implementation 'io.micrometer:micrometer-registry-prometheus:1.8.0'

  compile 'org.springdoc:springdoc-openapi-ui:1.4.2'
  compile 'org.springdoc:springdoc-openapi-kotlin:1.4.2'

  testCompile('org.springframework.boot:spring-boot-starter-test')
  testCompile('org.springframework.security:spring-security-test')
  testImplementation("org.assertj:assertj-core")

  testImplementation('org.junit.jupiter:junit-jupiter-api:5.1.0')
  testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.1.0')
}

test {
  useJUnitPlatform()
}

bootBuildImage {
  imageName="altszama-backend"
}
